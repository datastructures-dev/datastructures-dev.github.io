{"ast":null,"code":"import React from'react';import{GenerateLinks,GenerateRoutes}from'../Routings.js';import LinkedList from'./linked-list.js';function DSADefaultPage(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"We haven't implemented this yet :-(\"),/*#__PURE__*/React.createElement(\"p\",null,\"Maybe it's available at \",/*#__PURE__*/React.createElement(\"a\",{href:\"/old\"},\"/old\")),/*#__PURE__*/React.createElement(\"p\",null,\"Or you could help us implement it \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/datastructures-dev/datastructures-dev.github.io/\"},\"here\")));}var prefix=\"/data-structures\";var dataStructures=[{\"name\":\"Array\",\"route\":\"array\",\"page\":DSADefaultPage},{\"name\":\"Queue\",\"route\":\"queue\",\"page\":DSADefaultPage},{\"name\":\"Stack\",\"route\":\"stack\",\"page\":DSADefaultPage},{\"name\":\"Linked List\",\"route\":\"linked-list\",\"page\":LinkedList},{\"name\":\"Doubly Linked List\",\"route\":\"doubly-linked-list\",\"page\":DSADefaultPage},{\"name\":\"Hash Table\",\"route\":\"hash-table\",\"page\":DSADefaultPage},{\"name\":\"Heap\",\"route\":\"heap\",\"page\":DSADefaultPage},{\"name\":\"Tree\",\"route\":\"tree\",\"page\":DSADefaultPage},{\"name\":\"3-4-5 Tree & red-black tree\",\"route\":\"3-4-5-tree\",\"page\":DSADefaultPage},{\"name\":\"Graph\",\"route\":\"graph\",\"page\":DSADefaultPage}];export function DSLinks(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Data Structures\"),/*#__PURE__*/React.createElement(\"ul\",null,GenerateLinks({\"prefix\":prefix,\"pages\":dataStructures}).map(function(ds,i){return/*#__PURE__*/React.createElement(\"li\",{key:i},ds);})));}export var DSRoutes=function DSRoutes(){return/*#__PURE__*/React.createElement(GenerateRoutes,{prefix:prefix,rootPage:DSLinks,pages:dataStructures});};","map":{"version":3,"sources":["/home/dan/Projects/datastructures.dev/src/Data-Structures/index.js"],"names":["React","GenerateLinks","GenerateRoutes","LinkedList","DSADefaultPage","prefix","dataStructures","DSLinks","map","ds","i","DSRoutes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,aADF,CAEEC,cAFF,KAGO,gBAHP,CAIA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CAEA,QAASC,CAAAA,cAAT,EAA0B,CACxB,mBACE,qDACE,oEADF,cAEE,qEAA2B,yBAAG,IAAI,CAAC,MAAR,SAA3B,CAFF,cAGE,+EAAqC,yBAAG,IAAI,CAAC,qEAAR,SAArC,CAHF,CADF,CAOD,CAED,GAAMC,CAAAA,MAAM,CAAG,kBAAf,CACA,GAAMC,CAAAA,cAAc,CAAG,CACrB,CACE,OAAQ,OADV,CAEE,QAAS,OAFX,CAGE,OAAQF,cAHV,CADqB,CAMrB,CACE,OAAQ,OADV,CAEE,QAAS,OAFX,CAGE,OAAQA,cAHV,CANqB,CAWrB,CACE,OAAQ,OADV,CAEE,QAAS,OAFX,CAGE,OAAQA,cAHV,CAXqB,CAgBrB,CACE,OAAQ,aADV,CAEE,QAAS,aAFX,CAGE,OAAQD,UAHV,CAhBqB,CAqBrB,CACE,OAAQ,oBADV,CAEE,QAAS,oBAFX,CAGE,OAAQC,cAHV,CArBqB,CA0BrB,CACE,OAAQ,YADV,CAEE,QAAS,YAFX,CAGE,OAAQA,cAHV,CA1BqB,CA+BrB,CACE,OAAQ,MADV,CAEE,QAAS,MAFX,CAGE,OAAQA,cAHV,CA/BqB,CAoCrB,CACE,OAAQ,MADV,CAEE,QAAS,MAFX,CAGE,OAAQA,cAHV,CApCqB,CAyCrB,CACE,OAAQ,6BADV,CAEE,QAAS,YAFX,CAGE,OAAQA,cAHV,CAzCqB,CA8CrB,CACE,OAAQ,OADV,CAEE,QAAS,OAFX,CAGE,OAAQA,cAHV,CA9CqB,CAAvB,CAqDA,MAAO,SAASG,CAAAA,OAAT,EAAmB,CACxB,mBACE,qDACE,gDADF,cAEE,8BACIN,aAAa,CAAC,CACZ,SAAUI,MADE,CAEZ,QAASC,cAFG,CAAD,CAAb,CAGCE,GAHD,CAGK,SAACC,EAAD,CAAKC,CAAL,CAAW,CAChB,mBACE,0BAAI,GAAG,CAAEA,CAAT,EACGD,EADH,CADF,CAKD,CATC,CADJ,CAFF,CADF,CAiBD,CAED,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,sBAAM,oBAAC,cAAD,EAAgB,MAAM,CAAEN,MAAxB,CAAgC,QAAQ,CAAEE,OAA1C,CAAmD,KAAK,CAAED,cAA1D,EAAN,EAAjB","sourcesContent":["import React from 'react';\nimport {\n  GenerateLinks,\n  GenerateRoutes,\n} from '../Routings.js';\nimport LinkedList from './linked-list.js';\n\nfunction DSADefaultPage() {\n  return (\n    <>\n      <h1>We haven't implemented this yet :-(</h1>\n      <p>Maybe it's available at <a href=\"/old\">/old</a></p>\n      <p>Or you could help us implement it <a href=\"https://github.com/datastructures-dev/datastructures-dev.github.io/\">here</a></p>\n    </>\n  );\n}\n\nconst prefix = \"/data-structures\";\nconst dataStructures = [\n  {\n    \"name\": \"Array\",\n    \"route\": \"array\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Queue\",\n    \"route\": \"queue\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Stack\",\n    \"route\": \"stack\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Linked List\",\n    \"route\": \"linked-list\",\n    \"page\": LinkedList,\n  },\n  {\n    \"name\": \"Doubly Linked List\",\n    \"route\": \"doubly-linked-list\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Hash Table\",\n    \"route\": \"hash-table\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Heap\",\n    \"route\": \"heap\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Tree\",\n    \"route\": \"tree\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"3-4-5 Tree & red-black tree\",\n    \"route\": \"3-4-5-tree\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Graph\",\n    \"route\": \"graph\",\n    \"page\": DSADefaultPage,\n  },\n];\n\nexport function DSLinks() {\n  return (\n    <>\n      <h2>Data Structures</h2>\n      <ul>\n        { GenerateLinks({\n            \"prefix\": prefix,\n            \"pages\": dataStructures,\n        }).map((ds, i) => {\n          return (\n            <li key={i}>\n              {ds}\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport const DSRoutes = () => <GenerateRoutes prefix={prefix} rootPage={DSLinks} pages={dataStructures} />;\n"]},"metadata":{},"sourceType":"module"}