{"ast":null,"code":"var _jsxFileName = \"/home/dan/Projects/datastructures.dev/src/Data-Structures/linked-list.js\";\nimport React, { useState } from 'react';\nimport VisualPage, { About, Complexity, Controls, ControlGroup, Visualization } from '../VisualPage.js';\nimport { Node } from '../VisualComponents.js';\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [start, setStart] = useState(-1);\n  const [end, setEnd] = useState(-1);\n  const [addVal, setAddVal] = useState();\n  const [searchVal, setSearchVal] = useState();\n  const [removeVal, setRemoveVal] = useState();\n\n  function add(addEnd) {\n    let newList = list.map(v => Object.assign({}, v, {\n      \"highlight\": false\n    }));\n    let added = false;\n    const newItem = {\n      \"next\": addEnd ? -1 : start,\n      \"value\": addVal,\n      \"highlight\": false\n    }; // Add new item in next undefined slot\n\n    let i = 0;\n\n    for (; i < newList.length && !added; i++) {\n      if (newList[i] === undefined) {\n        newList[i] = newItem;\n        added = true;\n      }\n    }\n\n    if (!added) {\n      i = newList.length;\n      newList.push(newItem);\n    } // Fix old last node's pointer if addEnd\n\n\n    if (addEnd) {\n      if (end === -1) {\n        setEnd(i);\n      } else {\n        newList[end].next = i;\n        setEnd(i);\n      }\n\n      if (start === -1) setStart(i);\n    } else {\n      setStart(i);\n      if (end === -1) setEnd(i);\n    }\n\n    setList(newList);\n  }\n\n  function search(searchVal, callback = null) {\n    setList(list.map((v, i) => Object.assign({}, v, {\n      \"highlight\": false\n    })));\n    let index = start;\n    let visted = [];\n    let cancel = setInterval(() => {\n      // End of list and not found\n      if (index === -1) {\n        setList(list.map((v, i) => Object.assign({}, v, {\n          \"highlight\": false\n        })));\n        clearInterval(cancel);\n\n        if (callback !== null) {\n          callback(-1);\n        }\n      }\n\n      setList(list.map((v, i) => Object.assign({}, v, {\n        \"highlight\": i === index || v.value === searchVal && visted.includes(i)\n      })));\n      visted.push(index); // If found item stop\n\n      if (index !== -1 && list[index].value === searchVal) {\n        setList(list.map((v, i) => Object.assign({}, v, {\n          \"highlight\": i === index\n        })));\n\n        if (callback !== null) {\n          callback(index);\n        }\n      } else {\n        index = list[index].next;\n      }\n    }, 1000);\n  }\n\n  function remove() {\n    search(removeVal, index => {\n      if (index === -1) {// Not found\n      } else {\n        // Removal animation\n        let newList = list.slice();\n        let finished = false;\n\n        for (let i = 0; !finished; newList[i].next) {\n          if (newList[i].next === index) {\n            // Next node is removal node so remove it\n            newList[i].next = newList[newList[i].next].next;\n            newList[newList[i].next] = undefined;\n            finished = true;\n          }\n        }\n      }\n    });\n  } // Generate the nodes in correct order for visualization\n\n\n  const ordered = [];\n  let i = start;\n\n  while (i !== -1) {\n    ordered.push( /*#__PURE__*/React.createElement(Node, {\n      key: i,\n      highlight: list[i].highlight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, list[i].value));\n    i = list[i].next;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ControlGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Add item\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"add\",\n    type: \"text\",\n    onChange: e => setAddVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => add(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Add Front\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => add(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Add End\")), /*#__PURE__*/React.createElement(ControlGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"search\",\n    onChange: e => setSearchVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => search(searchVal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(ControlGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"remove\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Remove\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"remove\",\n    onChange: e => setRemoveVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: remove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Remove\"))), /*#__PURE__*/React.createElement(Visualization, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, ordered));\n}\n\nexport default function LinkedList(props) {\n  return /*#__PURE__*/React.createElement(VisualPage, {\n    title: \"Linked List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"What is a Linked List?\"), \"Linked List is a linear data structure and it is very common data structure which consists of group of nodes in a sequence which is divided in two parts. Each node consists of its own data and the address of the next node and forms a chain.\"), /*#__PURE__*/React.createElement(Complexity, {\n    complexity: [{\n      \"name\": \"Indexing\",\n      \"complexity\": \"Θ(n)\"\n    }, {\n      \"name\": \"Insert/delete at beginning\",\n      \"complexity\": \"Θ(1)\"\n    }, {\n      \"name\": \"Insert/delete at end (when last element known)\",\n      \"complexity\": \"Θ(1)\"\n    }, {\n      \"name\": \"Insert/delete in middle\",\n      \"complexity\": \"Θ(n) + Θ(1)\"\n    }, {\n      \"name\": \"Average wasted space\",\n      \"complexity\": \"Θ(1)\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Demo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/dan/Projects/datastructures.dev/src/Data-Structures/linked-list.js"],"names":["React","useState","VisualPage","About","Complexity","Controls","ControlGroup","Visualization","Node","Demo","list","setList","start","setStart","end","setEnd","addVal","setAddVal","searchVal","setSearchVal","removeVal","setRemoveVal","add","addEnd","newList","map","v","Object","assign","added","newItem","i","length","undefined","push","next","search","callback","index","visted","cancel","setInterval","clearInterval","value","includes","remove","slice","finished","ordered","highlight","e","target","LinkedList","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport {\n  Node,\n} from '../VisualComponents.js';\n\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [start, setStart] = useState(-1);\n  const [end, setEnd] = useState(-1);\n  const [addVal, setAddVal] = useState();\n  const [searchVal, setSearchVal] = useState();\n  const [removeVal, setRemoveVal] = useState();\n\n  function add(addEnd) {\n    let newList = list.map(v => Object.assign({}, v, {\n      \"highlight\": false,\n    }));\n    let added = false;\n    const newItem = {\n      \"next\": addEnd ? -1 : start,\n      \"value\": addVal,\n      \"highlight\": false,\n    }\n    // Add new item in next undefined slot\n    let i = 0;\n    for (; i < newList.length && !added; i++) {\n      if (newList[i] === undefined) {\n        newList[i] = newItem;\n        added = true;\n      }\n    }\n    if (!added) {\n      i = newList.length;\n      newList.push(newItem);\n    }\n\n    // Fix old last node's pointer if addEnd\n    if (addEnd) {\n      if (end === -1) {\n        setEnd(i);\n      } else {\n        newList[end].next = i;\n        setEnd(i);\n      }\n\n      if (start === -1)\n        setStart(i);\n    } else {\n      setStart(i);\n      if (end === -1)\n        setEnd(i);\n    }\n    setList(newList);\n  }\n\n  function search(searchVal, callback = null) {\n    setList(list.map((v, i) => Object.assign({}, v, {\n      \"highlight\": false,\n    })));\n\n    let index = start;\n    let visted = [];\n\n    let cancel = setInterval(() => {\n      // End of list and not found\n      if (index === -1) {\n        setList(list.map((v, i) => Object.assign({}, v, {\n          \"highlight\": false\n        })));\n        clearInterval(cancel)\n        if (callback !== null) {\n          callback(-1);\n        }\n      }\n      setList(list.map((v, i) => Object.assign({}, v, {\n        \"highlight\": i === index\n          || (v.value === searchVal && visted.includes(i)),\n      })));\n      visted.push(index);\n\n      // If found item stop\n      if (index !== -1 && list[index].value === searchVal) {\n        setList(list.map((v, i) => Object.assign({}, v, {\n          \"highlight\": i === index\n        })));\n        if (callback !== null) {\n          callback(index);\n        }\n      } else {\n        index = list[index].next;\n      }\n    }, 1000);\n  }\n\n  function remove() {\n    search(removeVal, index => {\n      if (index === -1) {\n        // Not found\n      } else {\n        // Removal animation\n        let newList = list.slice();\n        let finished = false;\n        for (let i = 0; !finished; newList[i].next) {\n          if (newList[i].next === index) {\n            // Next node is removal node so remove it\n            newList[i].next = newList[newList[i].next].next;\n            newList[newList[i].next] = undefined;\n            finished = true; \n          }\n        }\n      }\n    })\n  }\n\n\n  // Generate the nodes in correct order for visualization\n  const ordered = [];\n  let i = start;\n  while (i !== -1) {\n    ordered.push(\n      <Node key={i} highlight={list[i].highlight}>{list[i].value}</Node>\n    );\n    i = list[i].next;\n  }\n  return (\n    <>\n      <Controls>\n        <ControlGroup>\n          <label htmlFor=\"add\">Add item</label>\n          <input name=\"add\" type=\"text\" onChange={e => setAddVal(e.target.value)}></input>\n          <button onClick={() => add(false)}>Add Front</button>\n          <button onClick={() => add(true)}>Add End</button>\n        </ControlGroup>\n        <ControlGroup>\n          <label htmlFor=\"search\">Search</label>\n          <input name=\"search\" onChange={e => setSearchVal(e.target.value)}></input>\n          <button onClick={() => search(searchVal)}>Search</button>\n        </ControlGroup>\n        <ControlGroup>\n          <label htmlFor=\"remove\">Remove</label>\n          <input name=\"remove\" onChange={e => setRemoveVal(e.target.value)}></input>\n          <button onClick={remove}>Remove</button>\n        </ControlGroup>\n      </Controls>\n      <Visualization>\n        {ordered}\n      </Visualization>\n    </>\n  );\n}\n\nexport default function LinkedList(props) {\n  return (\n    <VisualPage title=\"Linked List\">\n      <About>\n        <h4>What is a Linked List?</h4>\n        Linked List is a linear data structure and it is very common data structure which consists of group of nodes in a sequence which is divided in two parts. Each node consists of its own data and the address of the next node and forms a chain.\n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Indexing\",\n          \"complexity\": \"Θ(n)\"\n        },\n        {\n          \"name\": \"Insert/delete at beginning\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Insert/delete at end (when last element known)\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Insert/delete in middle\",\n          \"complexity\": \"Θ(n) + Θ(1)\",\n        },\n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />\n    </VisualPage>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}