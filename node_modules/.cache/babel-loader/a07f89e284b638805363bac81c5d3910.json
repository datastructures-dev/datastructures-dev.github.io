{"ast":null,"code":"var _jsxFileName = \"/home/dan/Projects/datastructures.dev/src/Data-Structures/queue.js\";\nimport React, { useState, useEffect } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport VisualPage, { About, Complexity, Controls, ControlGroup, Visualization } from '../VisualPage.js';\nimport './Styles/queue.css';\n\nfunction Queue(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"queue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n    appear: true,\n    in: true,\n    timeout: 200,\n    unmountOnExit: true,\n    classNames: \"queue-node\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, props.children));\n}\n\nfunction QueueNode(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"queue-node\" + (props.highlight ? \" highlight\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, props.children);\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [addVal, setAddVal] = useState();\n\n  function add() {\n    setList([...list, {\n      \"value\": addVal,\n      \"highlight\": false\n    }]);\n  }\n\n  function remove() {\n    setList(list.slice(1));\n  } // Generate the nodes in correct order for visualization\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ControlGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Add item\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"add\",\n    type: \"text\",\n    onChange: e => setAddVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Enqueue\")), /*#__PURE__*/React.createElement(ControlGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: remove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Dequeue\"))), /*#__PURE__*/React.createElement(Visualization, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Queue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, list.map((node, i) => {\n    return /*#__PURE__*/React.createElement(QueueNode, {\n      key: i,\n      index: i,\n      highlight: node.highlight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, node.value);\n  }))));\n}\n\nexport default function QueuePage(props) {\n  return /*#__PURE__*/React.createElement(VisualPage, {\n    title: \"Queue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"What is a Queue?\"), \"Stacks are a FIFO (first in- first out) structure. They are used in a lot of reactive and UI related tasks, think back button on browsers\"), /*#__PURE__*/React.createElement(Complexity, {\n    complexity: [{\n      \"name\": \"Indexing\",\n      \"complexity\": \"Θ(n)\"\n    }, {\n      \"name\": \"Enqueue/Dequeue Element\",\n      \"complexity\": \"Θ(1)\"\n    }, {\n      \"name\": \"Average wasted space\",\n      \"complexity\": \"Θ(1)\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Demo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/dan/Projects/datastructures.dev/src/Data-Structures/queue.js"],"names":["React","useState","useEffect","CSSTransitionGroup","VisualPage","About","Complexity","Controls","ControlGroup","Visualization","Queue","props","children","QueueNode","highlight","Demo","list","setList","addVal","setAddVal","add","remove","slice","e","target","value","map","node","i","QueuePage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport './Styles/queue.css';\n\nfunction Queue(props) {\n  return (\n    <div className=\"queue\">\n    <CSSTransitionGroup appear in={true} timeout={200} unmountOnExit classNames=\"queue-node\">\n      {props.children}\n    </CSSTransitionGroup>\n    </div>\n  );\n}\n\nfunction QueueNode(props) {\n  return (\n      <div className={\"queue-node\" + (props.highlight ? \" highlight\" : \"\")}>\n        {props.children}\n      </div>\n  );\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [addVal, setAddVal] = useState();\n\n  function add() {\n    setList([\n      ...list,\n      {\n        \"value\": addVal,\n        \"highlight\": false,\n      }\n    ]);\n  }\n\n  function remove() {\n    setList(list.slice(1));\n  }\n\n  // Generate the nodes in correct order for visualization\n  return (\n    <>\n      <Controls>\n        <ControlGroup>\n          <label htmlFor=\"add\">Add item</label>\n          <input name=\"add\" type=\"text\" onChange={e => setAddVal(e.target.value)}></input>\n          <button onClick={add}>Enqueue</button>\n        </ControlGroup>\n        <ControlGroup>\n          <button onClick={remove}>Dequeue</button>\n        </ControlGroup>\n      </Controls>\n      <Visualization>\n        <Queue>\n          {list.map((node, i) => {\n            return (\n              <QueueNode key={i} index={i} highlight={node.highlight}>\n                {node.value}\n              </QueueNode>\n            );\n          })}\n        </Queue>\n      </Visualization>\n    </>\n  );\n}\n\nexport default function QueuePage(props) {\n  return (\n    <VisualPage title=\"Queue\">\n      <About>\n        <h4>What is a Queue?</h4>\n        Stacks are a FIFO (first in- first out) structure. They are used in a lot of reactive and UI related\n        tasks, think back button on browsers\n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Indexing\",\n          \"complexity\": \"Θ(n)\"\n        },\n        {\n          \"name\": \"Enqueue/Dequeue Element\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />\n    </VisualPage>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}