{"ast":null,"code":"var _jsxFileName = \"/home/dan/Projects/datastructures.dev/src/Data-Structures/stack.js\";\nimport React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport VisualPage, { About, Complexity, Controls, ControlGroup, Visualization } from '../VisualPage.js';\nimport './Styles/stack.css';\n\nfunction Stack(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nfunction StackNode(props) {\n  return /*#__PURE__*/React.createElement(CSSTransition, {\n    appear: true,\n    in: props.show,\n    onExited: props.onExited,\n    timeout: 200,\n    unmountOnExit: true,\n    classNames: \"stack-node\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-node\" + (props.highlight ? \" highlight\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, props.children));\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [addVal, setAddVal] = useState();\n\n  function add() {\n    setList([...list, {\n      \"value\": addVal,\n      \"highlight\": false,\n      \"show\": true\n    }]);\n  }\n\n  function remove() {\n    setList([Object.assign({}, list[0], {\n      \"show\": false\n    }), ...list.slice(1)]);\n  }\n\n  function onExited() {\n    setList(list.slice(1));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ControlGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Add item\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"add\",\n    type: \"text\",\n    onChange: e => setAddVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Push\")), /*#__PURE__*/React.createElement(ControlGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: remove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Pop\"))), /*#__PURE__*/React.createElement(Visualization, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, list.map((node, i) => {\n    return /*#__PURE__*/React.createElement(StackNode, {\n      key: i,\n      index: i,\n      show: node.show,\n      highlight: node.highlight,\n      onExited: onExited,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, node.value);\n  }))));\n}\n\nexport default function StackPage(props) {\n  return /*#__PURE__*/React.createElement(VisualPage, {\n    title: \"Stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"What is a Stack?\"), \"Stacks are a LIFO (last in- first out) structure. They are used in a lot of reactive and UI related tasks, think back button on browsers\"), /*#__PURE__*/React.createElement(Complexity, {\n    complexity: [{\n      \"name\": \"Indexing\",\n      \"complexity\": \"Θ(n)\"\n    }, {\n      \"name\": \"Push/Pop Element\",\n      \"complexity\": \"Θ(1)\"\n    }, {\n      \"name\": \"Average wasted space\",\n      \"complexity\": \"Θ(1)\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Demo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/dan/Projects/datastructures.dev/src/Data-Structures/stack.js"],"names":["React","useState","CSSTransition","VisualPage","About","Complexity","Controls","ControlGroup","Visualization","Stack","props","children","StackNode","show","onExited","highlight","Demo","list","setList","addVal","setAddVal","add","remove","Object","assign","slice","e","target","value","map","node","i","StackPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,UAAP,IACEC,KADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,aALF,QAMO,kBANP;AAOA,OAAO,oBAAP;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,QADT,CADF;AAKD;;AAED,SAASC,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,sBACE,oBAAC,aAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,EAAE,EAAEA,KAAK,CAACG,IAFZ;AAGE,IAAA,QAAQ,EAAEH,KAAK,CAACI,QAHlB;AAIE,IAAA,OAAO,EAAE,GAJX;AAKE,IAAA,aAAa,MALf;AAME,IAAA,UAAU,EAAC,YANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,SAAS,EAAE,gBAAgBJ,KAAK,CAACK,SAAN,GAAkB,YAAlB,GAAiC,EAAjD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACC,QADT,CARF,CADF;AAcD;;AAED,SAASK,IAAT,GAAgB;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,EAApC;;AAEA,WAASoB,GAAT,GAAe;AACbH,IAAAA,OAAO,CAAC,CACN,GAAGD,IADG,EAEN;AACE,eAASE,MADX;AAEE,mBAAa,KAFf;AAGE,cAAQ;AAHV,KAFM,CAAD,CAAP;AAQD;;AAED,WAASG,MAAT,GAAkB;AAChBJ,IAAAA,OAAO,CAAC,CACNK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,IAAI,CAAC,CAAD,CAAtB,EAA2B;AACzB,cAAQ;AADiB,KAA3B,CADM,EAIN,GAAIA,IAAI,CAACQ,KAAL,CAAW,CAAX,CAJE,CAAD,CAAP;AAMD;;AAED,WAASX,QAAT,GAAoB;AAClBI,IAAAA,OAAO,CAACD,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAD,CAAP;AACD;;AAED,sBACE,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,QAAQ,EAAEC,CAAC,IAAIN,SAAS,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEP,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,eAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CANF,CADF,eAWE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACY,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,wBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAEA,CAFT;AAGE,MAAA,IAAI,EAAED,IAAI,CAACjB,IAHb;AAIE,MAAA,SAAS,EAAEiB,IAAI,CAACf,SAJlB;AAKE,MAAA,QAAQ,EAAED,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGgB,IAAI,CAACF,KAPR,CADF;AAWD,GAZA,CADH,CADF,CAXF,CADF;AA+BD;;AAED,eAAe,SAASI,SAAT,CAAmBtB,KAAnB,EAA0B;AACvC,sBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,6IADF,eAME,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAE,CACtB;AACE,cAAQ,UADV;AAEE,oBAAc;AAFhB,KADsB,EAKtB;AACE,cAAQ,kBADV;AAEE,oBAAc;AAFhB,KALsB,EAUtB;AACE,cAAQ,sBADV;AAEE,oBAAc;AAFhB,KAVsB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAqBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD","sourcesContent":["import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport './Styles/stack.css';\n\nfunction Stack(props) {\n  return (\n    <div className=\"stack\">\n      {props.children}\n    </div>\n  );\n}\n\nfunction StackNode(props) {\n  return (\n    <CSSTransition\n      appear\n      in={props.show}\n      onExited={props.onExited}\n      timeout={200}\n      unmountOnExit\n      classNames=\"stack-node\"\n    >\n      <div className={\"stack-node\" + (props.highlight ? \" highlight\" : \"\")}>\n        {props.children}\n      </div>\n    </CSSTransition>\n  );\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [addVal, setAddVal] = useState();\n\n  function add() {\n    setList([\n      ...list,\n      {\n        \"value\": addVal,\n        \"highlight\": false,\n        \"show\": true,\n      }\n    ]);\n  }\n\n  function remove() {\n    setList([\n      Object.assign({}, list[0], {\n        \"show\": false,\n      }),\n      ...(list.slice(1)),\n    ]);\n  }\n\n  function onExited() {\n    setList(list.slice(1));\n  }\n\n  return (\n    <>\n      <Controls>\n        <ControlGroup>\n          <label htmlFor=\"add\">Add item</label>\n          <input name=\"add\" type=\"text\" onChange={e => setAddVal(e.target.value)}></input>\n          <button onClick={add}>Push</button>\n        </ControlGroup>\n        <ControlGroup>\n          <button onClick={remove}>Pop</button>\n        </ControlGroup>\n      </Controls>\n      <Visualization>\n        <Stack>\n          {list.map((node, i) => {\n            return (\n              <StackNode\n                key={i}\n                index={i}\n                show={node.show}\n                highlight={node.highlight}\n                onExited={onExited}\n              >\n                {node.value}\n              </StackNode>\n            );\n          })}\n        </Stack>\n      </Visualization>\n    </>\n  );\n}\n\nexport default function StackPage(props) {\n  return (\n    <VisualPage title=\"Stack\">\n      <About>\n        <h4>What is a Stack?</h4>\n        Stacks are a LIFO (last in- first out) structure. They are used in a lot of reactive and UI related\n        tasks, think back button on browsers\n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Indexing\",\n          \"complexity\": \"Θ(n)\"\n        },\n        {\n          \"name\": \"Push/Pop Element\",\n          \"complexity\": \"Θ(1)\"\n        },\n        \n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />\n    </VisualPage>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}