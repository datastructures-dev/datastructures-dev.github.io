{"version":3,"sources":["Routings.js","Components/Card.js","VisualPage.js","Data-Structures/linked-list.js","Data-Structures/stack.js","Data-Structures/queue.js","Data-Structures/array.js","Data-Structures/heap.js","Data-Structures/index.js","Pages/Home.js","Pages/About.js","Algorithms/Search/index.js","Algorithms/Sorting/index.js","Algorithms/Shortest-Path/index.js","Algorithms/index.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["DSADefaultPage","href","GenerateLinks","props","pages","map","page","pagepath","prefix","route","key","to","name","GenerateRoutes","exact","path","rootPage","children","CardGrid","className","Card","Controls","ControlGroup","Visualization","Complexity","colSpan","complexity","c","About","VisualPage","title","LinkedList","LinkedListNode","highlight","Demo","useState","list","setList","start","setStart","end","setEnd","addVal","setAddVal","searchVal","setSearchVal","removeVal","setRemoveVal","add","addEnd","newList","v","Object","assign","added","newItem","i","length","undefined","push","next","idx","found","ordered","value","htmlFor","type","onChange","e","target","onClick","index","visted","cancel","setInterval","includes","clearInterval","console","log","searchRemove","setTimeout","alert","nl","prev","nxt","splice","Stack","StackNode","CSSTransition","appear","in","show","onExited","timeout","unmountOnExit","classNames","slice","node","Queue","QueueNode","Array","ArrayIndex","setLength","setIndex","len","l","Heap","htmlDoc","s","d","x","y","dataStructures","html","DSLinks","DSRoutes","HomePage","style","margin","textAlign","AboutPage","SearchLinks","SearchRoutes","SortingLinks","SortingRoutes","ShortestPathLinks","ShortestPathRoutes","AlgoLinks","AlgoRoutes","useLocation","pathname","text","link","matchPath","strict","App","location","useAckee","server","domainId","ignoreLocalhost","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce8f8286.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nexport function DSADefaultPage() {\n  return (\n    <>\n      <h1>We haven't implemented this yet :-(</h1>\n      <p>Can you help us implement it <a href=\"https://github.com/datastructures-dev/datastructures-dev.github.io/\">here</a></p>\n    </>\n  );\n}\n\nexport function GenerateLinks(props) {\n  return (\n    <ul>\n      {props.pages.map(page => {\n        const pagepath = `${props.prefix}/${page.route}`;\n        return (\n          <li key={pagepath}>\n            <Link to={pagepath}>\n              {page.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport function GenerateRoutes(props) {\n  return (\n    <Switch>\n      <Route exact path={props.prefix}>\n        {props.rootPage}\n      </Route>\n      { props.pages.map(page => {\n        const pagepath = `${props.prefix}/${page.route}`;\n        return (\n          <Route key={pagepath} exact path={pagepath}>\n            {page.page}\n          </Route>\n        );\n      })}\n      {props.children}\n    </Switch>\n  );\n}\n","import React from 'react';\nimport './Card.css';\n\nexport function CardGrid(props) {\n  return (\n    <div className={`card-grid ${props.className}`}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default function Card(props) {\n  return (\n    <div className={`card ${props.className}`}>\n      {props.children}\n    </div>\n  );\n}\n","import React from 'react';\nimport './VisualPage.css';\n\nexport function Controls(props) {\n  return (\n    <section className=\"Controls\">\n      {props.children}\n    </section>\n  );\n}\n\nexport function ControlGroup(props) {\n  return (\n    <div className=\"ControlGroup\">\n      {props.children}\n    </div>\n  );\n}\n\nexport function Visualization(props) {\n  return (\n    <section className=\"Visual\">\n      {props.children}\n    </section>\n  );\n}\n\nexport function Complexity(props) {\n  return (\n    <section className=\"Complexity\">\n      <table>\n        <thead>\n          <tr>\n            <th colSpan=\"2\">Complexity</th>\n          </tr>\n        </thead>\n        <tbody>\n          { props.complexity.map(c => {\n            return (\n              <tr key={c.name}>\n                <td>{c.name}</td>\n                <td>{c.complexity}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport function About(props) {\n  return (\n    <section className=\"About\">\n      {props.children}\n    </section>\n  );\n}\n\nexport default function VisualPage(props) {\n  return (\n    <article className=\"VisualPage\">\n      <h1>{props.title}</h1>\n      {props.children}\n    </article>\n  );\n}\n\n","import React, { useState } from 'react';\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport './Styles/linked-list.css';\n\nexport function LinkedList(props) {\n  return (\n    <div className=\"linked-list\">\n      {props.children}\n    </div>\n  );\n}\n\nfunction LinkedListNode(props) {\n  return (\n    <div className={'linked-list-node' + (props.highlight ? ' highlight' : '')}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [start, setStart] = useState(-1);\n  const [end, setEnd] = useState(-1);\n  const [addVal, setAddVal] = useState();\n  const [searchVal, setSearchVal] = useState();\n  const [removeVal, setRemoveVal] = useState();\n\n  function add(addEnd) {\n    let newList = list.map(v => Object.assign({}, v, {\n      \"highlight\": false,\n    }));\n    let added = false;\n    const newItem = {\n      \"next\": addEnd ? -1 : start,\n      \"value\": addVal,\n      \"highlight\": false,\n    }\n    // Add new item in next undefined slot\n    let i = 0;\n    for (; i < newList.length && !added; i++) {\n      if (newList[i] === undefined) {\n        newList[i] = newItem;\n        added = true;\n      }\n    }\n    if (!added) {\n      i = newList.length;\n      newList.push(newItem);\n    }\n\n    // Fix old last node's pointer if addEnd\n    if (addEnd) {\n      if (end === -1) {\n        setEnd(i);\n      } else {\n        newList[end].next = i;\n        setEnd(i);\n      }\n\n      if (start === -1)\n        setStart(i);\n    } else {\n      setStart(i);\n      if (end === -1)\n        setEnd(i);\n    }\n    setList(newList);\n  }\n\n\n  function search() {\n    setList(list.map((v, i) => Object.assign({}, v, {\n      \"highlight\": false,\n    })));\n\n    let index = start;\n    let visted = [];\n\n    let cancel = setInterval(() => {\n      if (index === -1) {\n        setList(list.map((v, i) => Object.assign({}, v, {\n          \"highlight\": visted.includes(i)\n            && v.value === searchVal,\n        })));\n        clearInterval(cancel)\n        return;\n      }\n      setList(list.map((v, i) => Object.assign({}, v, {\n        \"highlight\": i === index\n          || (v.value === searchVal && visted.includes(i)),\n      })));\n      visted.push(index);\n\n      // If found item stop\n      if (index !== -1 && list[index].value === searchVal) {\n        index = -1;\n\n      } else {\n        index = list[index].next;\n      }\n    }, 1000);\n\n\n\n  }\n\n  //make em global\n  var idx = null;\n  var found = false;\n\n  function searchRemove(searchVal) {\n    setList(list.map((v, i) => Object.assign({}, v, {\n      \"highlight\": false,\n    })));\n\n    let index = start;\n    let visted = [];\n\n    let cancel = setInterval(() => {\n      if (index === -1) {\n        setList(list.map((v, i) => Object.assign({}, v, {\n          \"highlight\": visted.includes(i)\n            && v.value === searchVal,\n        })));\n        clearInterval(cancel)\n        return;\n      }\n      setList(list.map((v, i) => Object.assign({}, v, {\n        \"highlight\": i === index\n          || (v.value === searchVal && visted.includes(i)),\n      })));\n      visted.push(index);\n\n      // If found item stop\n      if (index !== -1 && list[index].value === searchVal) {\n        found = true\n        idx = index\n        index = -1;\n        console.log(\"Found\")\n        //clearInterval(cancel)\n      } else {\n        index = list[index].next;\n      }\n    }, 500);\n\n\n\n  }\n\n\n  function remove() {\n    searchRemove(removeVal)\n    setTimeout(function () {\n      // console.log(found, idx)\n      if (found === false) {\n        alert(\"Value: \" + removeVal + \" is not in the list\")\n      } else {\n        //found something. Kill it\n        var nl = Object.assign([], list)\n        var prev = null //prev pointer\n        var index = start;\n        while (index !== idx) {\n          prev = index\n          index = list[index].next\n          console.log(\"Here \"+ prev + \" \" + index)\n        }\n        console.log(\"tHere \"+ prev + \" \" + index)\n\n        if (prev === null && nl[index].next === -1) {\n          //only one element\n          setStart(-1)\n          setList([])\n\n        } else if(prev!==null){\n          //not first element\n          var next = nl[index].next //next pointer\n          nl[prev].next = next\n          console.log(nl)\n          setList(nl)\n        }else{\n          //first element\n          var nxt = nl[index].next //next pointer\n          //nl[index].next = nxt\n          setStart(nxt)\n          setEnd(nxt)\n          nl.splice(index,1)\n          console.log(nl)\n          setList(nl)\n        }\n\n      }\n\n    }, 2000);\n  }\n\n\n  // Generate the nodes in correct order for visualization\n  const ordered = [];\n  let i = start;\n  while (i !== -1) {\n    ordered.push(\n      <LinkedListNode key={i} highlight={list[i].highlight}>{list[i].value}</LinkedListNode>\n    );\n    i = list[i].next;\n  }\n  return (\n    <>\n      <Controls>\n        <ControlGroup>\n          <label htmlFor=\"add\">Add item</label>\n          <input name=\"add\" type=\"text\" onChange={e => setAddVal(e.target.value)}></input>\n          <button onClick={() => add(false)}>Add Front</button>\n          <button onClick={() => add(true)}>Add End</button>\n        </ControlGroup>\n        <ControlGroup>\n          <label htmlFor=\"search\">Search</label>\n          <input name=\"search\" onChange={e => setSearchVal(e.target.value)}></input>\n          <button onClick={search}>Search</button>\n        </ControlGroup>\n        <ControlGroup>\n          <label htmlFor=\"remove\">Remove</label>\n          <input name=\"remove\" onChange={e => setRemoveVal(e.target.value)}></input>\n          <button onClick={remove}>Remove</button>\n        </ControlGroup>\n      </Controls>\n      <Visualization>\n        <LinkedList>\n          {ordered}\n        </LinkedList>\n      </Visualization>\n    </>\n  );\n}\n\nexport default function LinkedListPage(props) {\n  return (\n    <VisualPage title=\"Linked List\">\n      <About>\n        <h4>What is a Linked List?</h4>\n        Linked List is a linear data structure and it is very common data structure which consists of group of nodes in a sequence which is divided in two parts. Each node consists of its own data and the address of the next node and forms a chain.\n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Indexing\",\n          \"complexity\": \"Θ(n)\"\n        },\n        {\n          \"name\": \"Insert/delete at beginning\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Insert/delete at end (when last element known)\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Insert/delete in middle\",\n          \"complexity\": \"Θ(n) + Θ(1)\",\n        },\n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />\n    </VisualPage>\n  );\n}\n","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport './Styles/stack.css';\n\nexport function Stack(props) {\n  return (\n    <div className=\"stack\">\n      {props.children}\n    </div>\n  );\n}\n\nexport function StackNode(props) {\n  return (\n    <CSSTransition\n      appear\n      in={props.show}\n      onExited={props.onExited}\n      timeout={200}\n      unmountOnExit\n      classNames=\"stack-node\"\n    >\n      <div className={\"stack-node\" + (props.highlight ? \" highlight\" : \"\")}>\n        {props.children}\n      </div>\n    </CSSTransition>\n  );\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [addVal, setAddVal] = useState();\n\n  function add() {\n    setList([\n      ...list,\n      {\n        \"value\": addVal,\n        \"highlight\": false,\n        \"show\": true,\n      }\n    ]);\n  }\n\n  function remove() {\n    setList([\n      ...(list.slice(0, list.length - 1)),\n      Object.assign({}, list[list.length - 1], {\n        \"show\": false,\n      }),\n    ]);\n  }\n\n  function onExited() {\n    setList(list.slice(0, list.length - 1));\n  }\n\n  return (\n    <>\n      <Controls>\n        <ControlGroup>\n          <label htmlFor=\"add\">Add item</label>\n          <input name=\"add\" type=\"text\" onChange={e => setAddVal(e.target.value)}></input>\n          <button onClick={add}>Push</button>\n        </ControlGroup>\n        <ControlGroup>\n          <button onClick={remove}>Pop</button>\n        </ControlGroup>\n      </Controls>\n      <Visualization>\n        <Stack>\n          {list.map((node, i) => {\n            return (\n              <StackNode\n                key={i}\n                index={i}\n                show={node.show}\n                highlight={node.highlight}\n                onExited={onExited}\n              >\n                {node.value}\n              </StackNode>\n            );\n          })}\n        </Stack>\n      </Visualization>\n    </>\n  );\n}\n\nexport default function StackPage(props) {\n  return (\n    <VisualPage title=\"Stack\">\n      <About>\n        <h4>What is a Stack?</h4>\n        Stacks are a LIFO (last in- first out) structure. They are used in a lot of reactive and UI related\n        tasks, think back button on browsers\n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Indexing\",\n          \"complexity\": \"Θ(n)\"\n        },\n        {\n          \"name\": \"Push/Pop Element\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />\n    </VisualPage>\n  );\n}\n","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport './Styles/queue.css';\n\nexport function Queue(props) {\n  return (\n    <div className=\"queue\">\n      {props.children}\n    </div>\n  );\n}\n\nexport function QueueNode(props) {\n  return (\n    <CSSTransition\n      appear\n      in={props.show}\n      onExited={props.onExited}\n      timeout={200}\n      unmountOnExit\n      classNames=\"queue-node\"\n    >\n      <div className={\"queue-node\" + (props.highlight ? \" highlight\" : \"\")}>\n        {props.children}\n      </div>\n    </CSSTransition>\n  );\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [addVal, setAddVal] = useState();\n\n  function add() {\n    setList([\n      ...list,\n      {\n        \"value\": addVal,\n        \"highlight\": false,\n        \"show\": true,\n      }\n    ]);\n  }\n\n  function remove() {\n    setList([\n      Object.assign({}, list[0], {\n        \"show\": false,\n      }),\n      ...(list.slice(1)),\n    ]);\n  }\n\n  function onExited() {\n    setList(list.slice(1));\n  }\n\n  return (\n    <>\n      <Controls>\n        <ControlGroup>\n          <label htmlFor=\"add\">Add item</label>\n          <input name=\"add\" type=\"text\" onChange={e => setAddVal(e.target.value)}></input>\n          <button onClick={add}>Enqueue</button>\n        </ControlGroup>\n        <ControlGroup>\n          <button onClick={remove}>Dequeue</button>\n        </ControlGroup>\n      </Controls>\n      <Visualization>\n        <Queue>\n          {list.map((node, i) => {\n            return (\n              <QueueNode\n                key={i}\n                index={i}\n                show={node.show}\n                highlight={node.highlight}\n                onExited={onExited}\n              >\n                {node.value}\n              </QueueNode>\n            );\n          })}\n        </Queue>\n      </Visualization>\n    </>\n  );\n}\n\nexport default function QueuePage(props) {\n  return (\n    <VisualPage title=\"Queue\">\n      <About>\n        <h4>What is a Queue?</h4>\n        Queues are a FIFO (first in- first out) structure. They are used in a lot of reactive and UI related\n        tasks, think back button on browsers\n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Indexing\",\n          \"complexity\": \"Θ(n)\"\n        },\n        {\n          \"name\": \"Enqueue/Dequeue Element\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />\n    </VisualPage>\n  );\n}\n","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport './Styles/array.css';\n\nexport function Array(props) {\n  return (\n    <div className=\"array\">\n      {props.children}\n    </div>\n  );\n}\n\nexport function ArrayIndex(props) {\n  return (\n    <CSSTransition\n      appear\n      in={props.show}\n      onExited={props.onExited}\n      timeout={200}\n      unmountOnExit\n      classNames=\"array-index\"\n    >\n      <span className={\"array-index\" + (props.highlight ? \" highlight\" : \"\")}>\n        {props.children}\n      </span>\n    </CSSTransition>\n  );\n}\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [addVal, setAddVal] = useState(-1);\n  const [length, setLength] = useState(0);\n  const [index, setIndex] = useState(0);\n  var len=0;\n  function add() {\n    if(index<length){\n    var nl=Object.assign([],list)\n    nl[index]={\n      \"value\": addVal,\n      \"highlight\": false,\n      \"show\": true,\n    }\n    len+=1\n    setList(nl)\n  }else{\n    alert(\"Index Out of Bounds\")\n  }\n}\n\n  function remove() {\n    if(len>0){\n    var nl=Object.assign([],list)\n    nl[index]={\n      \"value\": \" \",\n      \"highlight\": false,\n      \"show\": true,\n    }\n    len-=1;\n    setList(nl)\n  }else{\n    alert(\"No elements in array\")\n  }\n}\n\n  function onExited() {\n    setList(list.slice(1));\n  }\n\n  function create(){\n    var l=[]\n    for(var i=0;i<length;i++){\n      l.push({\n        \"value\": \" \",\n        \"highlight\": false,\n        \"show\": true,\n      })\n    }\n    setList(l)\n  }\n\n\n  return (\n    <>\n      <Controls>\n      <ControlGroup>\n          <label htmlFor=\"create\">Array Length</label>\n          <input name=\"add\" type=\"text\" onChange={e => setLength(e.target.value)}></input>\n          <button onClick={create}>Create Array</button>\n        </ControlGroup>\n        <label htmlFor=\"index\">Index</label>\n        <input name=\"index\" type=\"number\"  onChange={e => setIndex(e.target.value)}></input>\n        <ControlGroup>\n          <label htmlFor=\"add\">Add item</label>\n          <input name=\"add\" type=\"text\" onChange={e => setAddVal(e.target.value)}></input>\n          <button onClick={add}>Insert at Index</button>\n        </ControlGroup>\n        <ControlGroup>\n          <button onClick={remove}>Remove from Index</button>\n        </ControlGroup>\n      </Controls>\n      <Visualization>\n        <Array>\n          {list.map((node, i) => {\n            return (\n              <ArrayIndex\n                key={i}\n                index={i}\n                show={node.show}\n                highlight={node.highlight}\n                onExited={onExited}\n              >\n                {node.value}\n              </ArrayIndex>\n            );\n          })}\n        </Array>\n      </Visualization>\n    </>\n  );\n}\n\nexport default function(props) {\n  return (\n    <VisualPage title=\"Array\">\n      <About>\n        <h4>What is an Array?</h4>\n        Arrays are sequential blocks of memory in a device that store data. They are not dynamic (size won't change).\n        They are extremely useful if we know that input will be bounded in within a fixed size (like pictures)\n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Indexing\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Set Element at Index\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />\n    </VisualPage>\n  );\n}\n","import React, { useState, Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport InnerHTML from 'dangerously-set-html-content'\n\n// import './heapsort/static/heap.js'\nimport VisualPage, {\n  About,\n  Complexity,\n  Controls,\n  ControlGroup,\n  Visualization,\n} from '../VisualPage.js';\nimport './Styles/queue.css';\nimport './Styles/styles.css';\nimport './Styles/style.css';\n// import './heapsort/static/heap.js';\n\nexport function Heap(props) {\n  return (\n    <div className=\"heap\">\n      {props.children}\n    </div>\n  );\n}\n\n\nvar htmlDoc=`<html>\n\n<head>\n  <link  href=\"./styles/styles.css\" />\n  <link  href=\"./styles/style.css\" />\n  <script src=\"https://d3js.org/d3.v4.min.js\"></script>\n\n</head>\n\n<body>\n  \n  \n\n    \n      \n      <input type=\"number\" id=\"len\" placeholder=\"Insert length of randomized array\"></input>\n        <button id=\"click\" onclick=\"clickity()\">Generate Arr of Length</button>\n        <button id=\"Refresh\" onclick=\"refresh()\">Refresh</button>\n\n  <div id=\"heap\">\n  </div>\n \n  \n</body>\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\" src=\"./heapsort/static/heap.js\"></script>\n\n<script type=\"text/javascript\">\nfunction run(){\n  var arr = []\n  console.log(\"Here\")\n  makeRandArray()\n  console.log(arr)\n  var duration = 500; // 700 a good moderate speed\n  var colorduration = 100;\n  var textTransDuration = 700;\n  var swapDelay = 1000;\n  var textRemoveDuration = 3000;\n  var compareDuration = 3000;\n  var addColorDuration = 1000;\n\n  var margin = { top: 50, right: 90, bottom: 30, left: 90 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n  var svg = d3.select(\"body\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n\n  var textSpacing = 40;\n  var arrtext = svg.append(\"g\").attr(\"class\", 'arrtext')\n\n  arrtext\n    .append('text').text('[')\n    .attr('transform', 'translate(10,20)');\n\n  var arrtextg = arrtext.selectAll('.eletext').data(arr).enter().append('g')\n    .attr('id', function (d, i) {\n      return (\"artextg\" + i);\n    })\n    .attr('transform', function (d, i) {\n      var xtran = i * textSpacing + 20;\n      var ytran = 20;\n      return \"translate(\" + xtran + ', ' + ytran + ')';\n    })\n    .attr('x', function (d, i) {\n      var xtran = i * textSpacing + 20;\n      return xtran\n    })\n\n  arrtextg.append('rect', ':first-child')\n    .attr('width', function (d, i) {\n      //          console.log('this = ', this, 'd = ', d)\n      return 20\n    })\n    .attr('height', 20)\n    .attr('transform', 'translate(0, -15)')\n    .attr('fill', 'none')\n    .attr('opacity', .4)\n  //        .transition(duration * 100)\n  //      .attr('fill', 'white')\n\n  arrtextg.append('text')\n    .text(function (d, i) {\n      //    console.log(d, i, arr.length);\n      return (i === arr.length - 1) ? d : (d + ', ');\n    })\n    .attr('class', 'eletext')\n    .attr('id', function (d, i) {\n      return 'arrText' + i;\n    })\n    .attr('stroke', 'grey')\n    .attr('fill', 'black')\n\n\n  arrtext.append('text').text(']')\n    .attr('transform', 'translate(' + ((arr.length + 1) * textSpacing) + ',20)');\n\n  arrtextg.attr('textbox', function (d) {\n    //  console.log('this arrtext = ', d3.select(this).select('text').node().getBBox().width)\n    var textW = d3.select(this).select('text').node().getBBox().width\n    d3.select(this).select('rect').attr('width', textW)\n    return d3.select(this).select('text').node().getBBox().width;\n  })\n\n\n  var g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n  // declares a tree layout and assigns the size\n  var treemap = d3.tree()\n    .size([width, height]);\n\n  var newsource = { name: arr[0], children: getChildren(0, arr) }\n\n  console.log(newsource);\n\n  var root = d3.hierarchy(newsource, function (d) { return d.children; });\n\n  root.x0 = 5;\n  root.y0 = 0;\n\n  // Make the root and all it's children null and move into _children attribute\n  collapse(root)\n  update(root);\n  runprom(root);\n\n  function runprom(dat) {\n    promun(dat)\n      .then(function (d) {\n        var nodescendants = true;\n        //  console.log('finished the promise', d.descendants())\n        for (i of root.descendants()) {\n          //  console.log(i)\n          if (i._children) {\n            nodescendants = false;\n            runprom(i)\n            break;\n          }\n        }\n        if (nodescendants === true) {\n          //      console.log('done buidling heap, now to max heap')\n          buildMaxHeap();\n        }\n      });\n  }\n\n\n  function promun(ino) {\n    var innodes = ino.descendants();\n    return new Promise(function (res, rej) {\n      //console.log('inpromise', ino)\n      unfold(ino);\n      d3.timeout(function () {\n        res(ino)\n      }, 2000);\n\n    })\n  }\n\n  function unfold(data) {\n    //console.log('unfolding, ', data)\n    //\tupdate(data)\n    if (data._children) {\n      if (data._children.length > 0) {\n        if (data.children === null) { data.children = [] }\n        data.children.push(data._children.shift())\n        if (data._children.length === 0) {\n          data._children = null;\n        }\n      }\n\n      setTimeout(function (d) {\n        update(data)\n        //console.log('should try to unfold data')\n        unfold(data)\n      }, 400)\n    }\n  }\n\n\n  function getChildren(i, array) {\n    var childs = [];\n    var nextIndex = i * 2 + 1;\n    if (typeof (array[i * 2 + 1]) === \"number\") {\n      childs[0] = { name: array[i * 2 + 1], children: [] };\n      if (typeof (array[i * 2 + 2]) === \"number\") {\n        childs[1] = { name: array[i * 2 + 2] };\n      }\n    }\n\n    if (typeof (arr[nextIndex * 2 + 1]) === \"number\") {\n      childs[0].children = getChildren(nextIndex, array)\n      childs[0]._children = null;\n\n      if (typeof (arr[nextIndex * 2 + 2]) === \"number\") {\n        childs[1].children = getChildren(nextIndex + 1, array);\n        childs[1]._children = null;\n      }\n    }\n\n    return childs\n  }\n\n  var nodes;\n  function update(data) {\n    //console.log(data)\n    //  var mapData = data.map()\n\n    var treeData = treemap(root);\n    nodes = treeData.descendants();\n\n    var links = treeData.descendants().slice(1);\n    // console.log(nodes);\n    //  console.log(\"nodes = \", nodes, \", links = \", links);\n\n    var node = g.selectAll('g.node')\n      .data(nodes, function (d, i) {\n        return d.id = i;\n      })\n\n    //\tconsole.log('node = ', node)\n\n    var nodeEnter = node.enter().append('g')\n      .attr('class', 'node')\n      .attr('transform', function (d) {\n        //\t\t  console.log('appending a new node', d);\n        d3.select('#artextg' + d.id)\n          .call(function (d) {\n            //  console.log('this is', this, d)\n            d.select('rect')\n              .attr('fill', 'red')\n              .transition()\n              .duration(duration * 2)\n              .attr('fill', 'white')\n          })\n\n        return 'translate( ' + data.x0 + ', ' + data.y0 + ' )';\n      })\n      .attr('id', function (d, i) {\n        return 'nodey' + i;\n      })\n      .attr('index', function (d, i) {\n        return i;\n      })\n\n\n    nodeEnter.append('circle')\n      .attr('class', 'node')\n      .attr('r', 1e-6)\n      .style('fill', function (d) {\n        return \"red\" //d._children ? \"lightsteelblue\" : \"#fff\";\n      })\n\n    // Labels for the nodes\n    nodeEnter.append('text')\n      .attr(\"dy\", \".35em\")\n      .attr(\"y\", function (d, i) {\n        return -15\n      })\n      .attr(\"x\", function (d, i) {\n        var xmove = i % 2;\n        return xmove ? -16 : 3 //d.children || d._children ? 1 : 1;\n      })\n      .attr(\"text-anchor\", function (d, i) {\n        var xmove = i % 2;\n        return xmove ? \"end\" : \"start\"; //d.children || d._children ? \"end\" : \"start\";\n      })\n      .attr(\"class\", \"valtext\")\n      .text(function (d) {\n        return d.data.name;\n      });\n\n    // UPDATE\n    var nodeUpdate = nodeEnter.merge(node)\n      .transition()\n      .duration(duration)\n      // .text(function(d) { return d.data.name; })\n      .attr('transform', function (d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\"\n      })\n      .on('end', function (d) {\n\n        /*\n                 nodeUpdate.select('circle.node')\n                 .transition()\n                 .duration(addColorDuration)\n                 .style(\"fill\", function(d) {\n                             return \"steelblue\"//d._children ? \"lightsteelblue\" : \"#fff\";\n                         })\n                         */\n      })\n\n    // Update the node attributes and style\n    nodeUpdate.select('circle.node')\n      .attr('r', 10)\n      .attr('cursor', 'pointer')\n      .style('stroke', 'black')\n      .style('stroke-width', '2px')\n      .transition()\n      .duration(addColorDuration)\n      .style(\"fill\", function (d) {\n        return \"steelblue\"//d._children ? \"lightsteelblue\" : \"#fff\";\n      })\n\n\n    // Remove any exiting nodes\n    var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function (d) {\n        return \"translate(\" + data.x + \",\" + data.y + \")\";\n      })\n      .remove();\n\n    // On exit reduce the node circles size to 0\n    nodeExit.select('circle')\n      .attr('r', 1e-6);\n\n    // On exit reduce the opacity of text labels\n    nodeExit.select('text')\n      .style('fill-opacity', 1e-6);\n\n    // ****************** links section ***************************\n\n    // Update the links...\n    var link = g.selectAll('path.link')\n      .data(links, function (d) { return d.id; });\n\n    // Enter any new links at the parent's previous position.\n    var linkEnter = link.enter().insert('path', \"g\")\n      //   .on('click', click)\n      .attr(\"class\", \"link\")\n      .attr('d', function (d) {\n        var o = { y: data.y0, x: data.x0 }\n        return diagonal(o, o)\n      })\n      .style('fill', 'none')\n      .style('stroke', 'black');\n\n    // UPDATE\n    var linkUpdate = linkEnter.merge(link);\n\n    // Transition back to the parent element position\n    linkUpdate.transition()\n      .duration(duration)\n      .attr('d', function (d) { return diagonal(d, d.parent) });\n\n\n    // Remove any exiting links\n    var linkExit = link.exit().transition()\n      .duration(duration)\n      .attr('d', function (d) {\n        var o = { x: data.x, y: data.y }\n        return diagonal(o, o)\n      })\n      .remove();\n\n    // Store the old positions for transition.\n    nodes.forEach(function (d, i) {\n      //   console.log(d)\n      d.x0 = d.x;\n      d.y0 = d.y;\n    });\n\n  }\n\n  // Make the node and all it's children null and move into _children attribute\n  function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  }\n\n`+function getPath(s,d){\n  return (`M ${s.x} ${s.y}\n  C ${(s.x + d.x) / 2} ${s.y},\n    ${(s.x + d.x) / 2} ${d.y},\n    ${d.x} ${d.y}`)\n}\n+`\n  // Creates a curved (diagonal) path from parent to the child nodes\n  // switched around all the x's and y's from orig so it's verticle\n  function diagonal(s, d) {\n    //console.log('in diag and s = ', s);\n    //console.log('d = ', d)\n\n    path = getPath(s,d)\n\n    return path;\n\n  }\n\n\n  function colorAllCircsGreen() {\n    d3.selectAll('circle')\n      .transition()\n      .duration(colorduration)\n      .style('fill', 'green')\n  }\n\n  var noders;\n\n\n  function buildMaxHeap() {\n\n    noders = d3.selectAll('g.node');\n    console.log('time to makeheapify', noders)\n    var numnodes = noders._groups[0].length;\n\n    var holders = { restartIndex: Math.floor((numnodes) / 2) - 1, bigChild: null }\n    console.log('holders to start = ', holders)\n    max_heapify(Math.floor((numnodes) / 2) - 1, holders)\n\n  }\n\n\n  function bigChildIndex(ind) {\n    //  console.log(ind);\n\n    var chillies = [];\n    if (nodes[ind]) {\n      chillies = nodes[ind].children;\n      if (chillies[1]) {\n        return (parseInt(chillies[0].data.name) > parseInt(chillies[1].data.name)) ? 0 : 1;\n      }\n      else {\n        return 0;\n      }\n    }\n    else {\n      return -1;\n    }\n    //  console.log(chillies)\n  }\n\n  function max_heapify(ind, holders) {\n    //    console.log('max heap from isnt going ', nodes[ind])\n    if (holders === null) {\n      holders = {}\n    }\n    noders = d3.selectAll('g.node')\n    var childindexes = []\n    holders.bigChild = bigChildIndex(ind)\n    holders.starter = ind;\n\n    if (nodes[ind].children) {\n      childindexes = nodes[ind].children.map(function (d, i) {\n        return d.id;\n      })\n    }\n\n    //  console.log('childindexes are', childindexes)\n    var anode = d3.select('#nodey' + ind)\n\n    changeRectColor(ind, 'red');\n\n    anode.select('circle')\n      .transition()\n      .duration(duration + textTransDuration)\n      .style('fill', 'red')\n      .on('end', function (d) {\n        //      console.log('holders', holders)\n        compareChils(childindexes, holders)\n      })\n\n\n\n    var comptext = 'compare the childrens';\n    anode.append('text')\n      .text(comptext)\n      .attr(\"text-anchor\", function (d) {\n        return 'middle';\n      })\n      .attr(\"dy\", '20px')\n      .attr('class', 'process')\n  }\n\n  function compareChils(childsArr, holders) {\n    colorForComp(childsArr[0], holders);\n    if (childsArr[1]) {\n      colorForComp(childsArr[1], holders);\n    }\n  }\n\n  function colorForComp(inex, holders) {\n\n    changeRectColor(inex, 'orange')\n\n    d3.select('#nodey' + inex)\n      .select('circle')\n      .transition()\n      .duration(duration + textRemoveDuration)\n      .style('fill', function (d) {\n        return 'orange'\n      })\n      .on('end', function (d) {\n        //        console.log('done and have ', d)\n        //      console.log(holders)\n        //     console.log(nodes[holders.restartIndex].children[holders.bigChild])\n        if (nodes[holders.starter].children[holders.bigChild] === d) {\n          //         console.log('its the big child need to check swaping')\n\n          changeRectColor(inex, 'yellow')\n\n          d3.select(this).transition()\n            .duration(duration + 200)\n            .style('fill', 'yellow')\n            .on('end', function () {\n              checkParentSwap(d, holders);\n            })\n        }\n        else {\n          console.log('this should make it green')\n\n          d3.select(this)\n            .transition()\n            .duration(colorduration)\n            .style('fill', 'green')\n          changeRectColor(inex, 'green')\n        }\n      })\n  }\n\n  function checkParentSwap(d, holders) {\n    // check if the given thing is bigger than the parent node\n    // and if not decrement holders.restartIndex and call the max heap thing with that\n    //console.log(\"d = \" , d)\n    var childer = d;\n    var cnode = d3.select('#nodey' + (d.id));\n    var pnode = d3.select('#nodey' + (d.parent.id));\n\n    console.log('parent node id = ', pnode.attr('id'))\n\n    d3.select('.process').text('Compare with largest child')\n\n\n    if (d.data.name > d.parent.data.name) {\n      d3.select('.process').text('Compare with largest child')\n        .transition()\n        .duration(compareDuration)\n        .delay(swapDelay)\n        .text(\"swap with big child\")\n        .on('end', function (d) {\n          //    console.log('swap with parent ', childer, holders);\n          //  changeRectColor(pnode.attr('id').slice(pnode.attr('id').length-1), 'green');\n          swapWithParent(childer, holders)\n        })\n        .on('interrupt', function (d) {\n          //    console.log('swap with parent ', childer, holders);\n          swapWithParent(childer, holders)\n        })\n        .remove();\n\n    }\n    else {\n      console.log('making stuff greenie')\n      cnode.select('circle')\n        .transition()\n        .duration(colorduration)\n        .style(\"fill\", 'green')\n        .on('end', function () {\n          console.log('maybe i should do stuff here')\n        })\n      changeRectColor(cnode.attr('index'), 'green');\n      changeRectColor(pnode.attr('index'), 'green');\n\n      d3.select('.process').text('This node is good move on')\n        .call(function () {\n          console.log('trying to just make the rects green', pnode)\n          setTimeout(function () {\n\n            console.log('why dont the rects turn green', cnode.attr('id').slice(cnode.attr('id').length - 1))\n            //    changeRectColor(pnode.attr('id').slice(pnode.attr('id').length-1), 'green');\n            //  changeRectColor(cnode.attr('id').slice(cnode.attr('id').length-1), 'green');\n\n          }, 700)\n\n        }\n        )\n        .transition()\n        .duration(3000)\n        .delay(2000)\n        .remove();\n\n      if (holders.restartIndex > 0) {\n        //    console.log('need to color stuff here', pnode)\n        changeRectColor(pnode.attr('id'), 'green');\n\n\n        pnode.select('circle')\n          .transition()\n          .duration(3000)\n          .style(\"fill\", 'green')\n\n\n        //    console.log('we get to recur!!!')\n        holders.restartIndex = holders.restartIndex - 1;\n        max_heapify(holders.restartIndex, holders)\n      }\n      else {\n        //  colorAllCircsGreen();\n        changeRectColor(pnode.attr('id'), 'green');\n        console.log('its all over')\n        changeRectColor(pnode.attr('id'), 'green');\n        popLargest();\n      }\n    }\n  }\n\n\n  function swapWithParent(bigchild, holders) {\n\n    var newLowval = bigchild.parent.data.name;\n    bigchild.parent.data.name = bigchild.data.name;\n    bigchild.data.name = newLowval;\n\n    console.log(bigchild.id, 'and we got', bigchild.parent.id)\n    swapArrayGs(bigchild.parent.id, bigchild.id)\n\n\n    var parnode = d3.select('#nodey' + (bigchild.parent.id))\n    parnode\n      .select('circle')\n      .transition()\n      .duration(duration + 2000)\n      .style('fill', 'green')\n      .on('end', function () {\n\n        parnode.select('.process')\n          .transition()\n          .delay(1000)\n          .remove();\n\n        changeRectColor(bigchild.parent.id, 'green')\n      })\n\n    var partext = parnode.select('.valtext');\n    //  console.log(partext)\n    partext\n      .transition()\n      .duration(textTransDuration)\n      .attr('transform', function (d) {\n        //    console.log('need to translate, ', d)\n        return \"translate(\" + (d.children[holders.bigChild].x - d.x) + ', ' + (d.children[holders.bigChild].y - d.y) + ')'\n      })\n      .on('end', function (d) {\n        changeRectColor(bigchild.parent.id, 'green')\n\n        d3.select(this).attr('transform', function (d) {\n          //  console.log('trying to put it back', this, d)\n          return 'translate(0,0)'\n        })\n          .text('')\n      })\n\n\n    var chinode = d3.select('#nodey' + (bigchild.id));\n\n    var chitext = chinode.select('.valtext');\n    chitext.transition()\n      .duration(textTransDuration)\n      .attr('transform', function (d) {\n        //console.log('its this.x  =', d3.select(this).attr('x'))\n        return \"translate(\" + (d.parent.x - d.x - d3.select(this).attr('x')) + ', ' + (d.parent.y - d.y) + ')'\n      })\n      .on('end', function (d) {\n        d3.select(this).attr('transform', function (d) {\n          //      console.log('trying to put it back', this, d)\n          return 'translate(0,0)'\n        })\n          .text('')\n      })\n\n    chinode.select('circle').transition()\n      .duration(duration)\n      .style('fill', 'red')\n      .on('end', function (d) {\n        //      console.log('need to do stuff with ', d)\n\n        chinode.append('text')\n          .attr('class', 'process')\n          .text(function (d) {\n            console.log(d)\n            console.log('and the holders', holders)\n            if (d.children) {\n              console.log('need to keep ballancing')\n              if (d.children.length > 0) {\n                console.log('trying to maxheap with ', holders, d)\n                changeRectColor(bigchild.index, 'red');\n                max_heapify(parseInt(d.id), holders)\n              }\n              else {\n                console.log('in the wierd stpot moving on with the', holders)\n                console.log('make all circs white fill still')\n                chinode.select('circle').transition()\n                  .duration(100)\n                  .style('fill', 'green')\n\n                changeRectColor(bigchild.attr('index'), 'green');\n\n                holders.restartIndex = holders.restartIndex - 1;\n                max_heapify(holders.restartIndex, holders)\n              }\n            }\n            else {\n              //    console.log('move on with the', holders)\n              //      console.log('rect not turning green, chinodeid = ', chinode.attr('id'))\n              chinode.select('circle').transition()\n                .duration(10)\n                .style('fill', 'green')\n\n              changeRectColor(bigchild.id, 'green');\n\n              if (holders.restartIndex > 0) {\n                holders.restartIndex = holders.restartIndex - 1;\n                max_heapify(holders.restartIndex, holders)\n              }\n              else {\n                console.log('endgame spot, done with it all')\n                changeRectColor(chinode.attr('id'), 'green');\n\n                popLargest();\n                //    colorAllCircsGreen();\n              }\n            }\n\n            return \"Check for children\";\n\n          })\n          .attr(\"text-anchor\", function (d) {\n            return 'middle';\n          })\n          .attr(\"dy\", '-20px')\n          .transition()\n          .duration(textRemoveDuration)\n          .delay(1000)\n          .style('fill', 'green')\n          .remove();\n      })\n    parnode.select('.process').remove();\n    upDateNodeVals()\n\n  }\n\n  function upDateNodeVals() {\n\n    d3.selectAll('g.node')\n      .transition()\n      .delay(swapDelay)\n      .select('text')\n      .text(function (d) {\n        //console.log('need to change all the texts', d)\n        return d.data.name\n      })\n\n  }\n\n  // a function to add a colored rectange to go behind the text in the array.\n\n  function changeRectColor(index, color) {\n\n    d3.select('#artextg' + index).select('rect')\n      .transition().duration(duration)\n      .attr('fill', color)\n\n    //  console.log('need to remove or change color of recs at right time still')\n  }\n\n  // Will swap the elements in the array at the top of the page.\n  // Just give the indexes of the elements you wish to swap.\n  function swapArrayGs(ind1, ind2) {\n\n    var g1 = d3.select('#artextg' + ind1)\n    var gx1 = g1.attr('x')\n    var g2 = d3.select('#artextg' + ind2)\n    var gx2 = g2.attr('x')\n    var g1Start = g1.select('text').text();\n    var g2Start = g2.select('text').text()\n\n    //  console.log('startiing val ', g1Start)\n    var xdis = gx2 - gx1\n\n    g1.select('text').transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(\" + xdis + ', 0)')\n      .on('end', function (d, i) {\n        //    console.log('d = ', d, 'this = ???', this)\n        g1.select('text').attr('transform', 'translate(0, 0)').text(g2Start);\n      })\n\n    g2.select('text').transition()\n      .duration(duration)\n      .attr(\"transform\", \"translate(\" + (-xdis) + ', 0)')\n      .on('end', function (d, i) {\n        //    console.log('d = ', d, 'this = ???', this)\n        g2.select('text').attr('transform', 'translate(0, 0)').text(g1Start);\n        updateRectSizes();\n      })\n  }\n\n\n  function updateRectSizes() {\n    arrtextg.attr('textbox', function (d) {\n      //  console.log('this arrtext = ', d3.select(this).select('text').node().getBBox().width)\n      var textW = d3.select(this).select('text').node().getBBox().width\n      d3.select(this).select('rect').attr('width', textW)\n      return d3.select(this).select('text').node().getBBox().width;\n    })\n  }\n\n\n  // Should take the top element in the heap and swap it with the last one,\n  // then the heap should get reballanced\n  function popLargest() {\n    console.log('done heaping now need to start sorting, should show swapping first and last elements of the array')\n\n    //console.log('need to update nodes = ', nodes)\n    // swap first with last node\n    var topper = d3.select('#nodey' + nodes[0].id)\n\n    var highval = nodes[0].data.name\n\n    var lower = d3.select('#nodey' + nodes[nodes.length - 1].id)\n    var lowval = nodes[nodes.length - 1].data.name\n\n    //  console.log('lowval is', lowval)\n    var toptransX = nodes[0].x - nodes[nodes.length - 1].x\n    var toptransY = nodes[nodes.length - 1].y - nodes[0].y\n\n    //  console.log(toptransX, 'and y= ', toptransY)\n    topper.select('.valtext')\n      .transition()\n      .attr('transform', \"translate(\" + toptransX + \", \" + toptransY + ')')\n      .on('end', function () {\n        //nodes[0].data.name = lowval;\n        //nodes[nodes.length-1].data.name = highval;\n        //    console.log('and this is', this)\n        d3.select(this).attr('transform', 'translate(0,0)')\n\n        //  upDateNodeVals()\n      })\n\n    nodes[0].data.name = lowval;\n    nodes[nodes.length - 1].data.name = highval;\n\n    swapArrayGs(0, nodes.length - 1)\n\n    MakeRectDone(nodes.length - 1, 'blue')\n\n    lower.select('circle')\n      .transition()\n      .delay(1000)\n      .duration(colorduration)\n      .style('fill', 'blue')\n      .on('end', function (d) {\n        var lastpar = nodes[nodes.length - 1].parent;\n        lastpar._children = nodes[nodes.length - 1];\n        //    console.log(lastpar, \"last parent is\")\n        var removableindex = lastpar.children.indexOf(nodes[nodes.length - 1]);\n        lastpar.children = lastpar.children.filter(function (d) {\n          return d !== nodes[nodes.length - 1]\n        })\n        if (lastpar.children.length === 0) {\n          lastpar.children = null;\n        }\n        update(lastpar)\n        //      console.log('nodes after all that,', nodes)\n        setTimeout(function () {\n          if (nodes.length === 1) {\n            console.log('All done just need to make this rectangle blue and maybe make the root go to the array.')\n            MakeRectDone(0, 'blue')\n          }\n          else {\n            max_heapify(0, {})\n          }\n\n        }, 2000)\n\n      })\n\n    //    console.log('want to make this blue')\n\n    lower.select('.valtext')\n      .transition()\n      .attr('transform', \"translate(\" + -toptransX + \", \" + -toptransY + ')')\n      .on('end', function () {\n        //nodes[0].data.name = lowval;\n        //  console.log('and this is', this)\n        d3.select(this).attr('transform', 'translate(0,0)')\n\n        upDateNodeVals()\n      })\n\n  }\n\n\n  function MakeRectDone(i) {\n    d3.select('#artextg' + i).select('rect')\n      .transition().duration(duration)\n      .attr('fill', 'none')\n      .attr('stroke', \"steelblue\")\n\n  }\n\n  function makeRandArray() {\n    var len = document.getElementById(\"len\").value;\n    console.log(\"s: \"+len)\n    for (var idx = 0; idx < len; idx++) {\n      var ele=Math.floor(Math.random() * 100)\n      console.log(\"pushing\"+ele)\n      arr.push(ele)\n    }\n    \n  }\n}\n\n  var myLink = document.getElementById('click');\n\n  function refresh(){\n    alert(\"refresh\")\n    location.reload();\n\n  }\n  function clickity() {\n    alert(\"clicked\")\n    //executeHome()\n    //var script = document.createElement(\"script\");\n    //script.type = \"text/javascript\";\n    //script.src = \"./heapsort/static/heap.js\";\n    //document.getElementsByTagName(\"head\")[0].appendChild(script);\n    run()\n    return false;\n  }\n</script>\n\n</html>`\n //come here Pt 2\n// const htmlDoc = {__html: Page};\nexport function QueueNode(props) {\n  return (\n    <CSSTransition\n      appear\n      in={props.show}\n      onExited={props.onExited}\n      timeout={200}\n      unmountOnExit\n      classNames=\"queue-node\"\n    >\n\n     </CSSTransition>\n  );\n}\n\n\nfunction Demo() {\n  const [list, setList] = useState([]);\n  const [length, setLength] = useState(0);\n\n  \n\n  function onExited() {\n    setList(list.slice(1));\n  }\n\n  // function include() { \n  \n  //   var script  = document.createElement('script'); \n  //   script.src  = getPath.toString(); \n  //   script.type = 'text/javascript'; \n  //   script.defer = true; \n  //   alert(script)\n  //   // document.getElementsByTagName('head').item(0).appendChild(script); \n  //   return script;\n    \n  // } \n  // function create(){\n  //   return `<script type=\"text/javascript\">`+getPath.toString()+`</script>`\n  // }\n\n  // htmlDoc=include()+htmlDoc\n  // htmlDoc=create()+htmlDoc\n  \n  return (\n    <>\n      <Controls>\n      \n        \n      </Controls>\n      <Visualization>\n        <Heap>\n          {list.map((node, i) => {\n            return (\n              <QueueNode\n                key={i}\n                index={i}\n                show={node.show}\n                highlight={node.highlight}\n                onExited={onExited}\n              >\n                {node.value}\n              </QueueNode>\n            );\n          })}\n        </Heap>\n      </Visualization>\n    </>\n  );\n}\n\nexport  default function QueuePage(props) {\n  return (\n    <VisualPage title=\"Heap (sift down)\">\n      <About>\n        <h4>What is a Heap?</h4>\n        The bane of my existance. \n      </About>\n      <Complexity complexity={[\n        {\n          \"name\": \"Sorting\",\n          \"complexity\": \"Θ(n*log(n))\"\n        },\n        {\n          \"name\": \"Set Element at Index\",\n          \"complexity\": \"Θ(1)\"\n        },\n        {\n          \"name\": \"Average wasted space\",\n          \"complexity\": \"Θ(1)\",\n        },\n      ]} />\n      <Demo />,\n      <InnerHTML html={htmlDoc} />\n\n    </VisualPage>\n\n  );\n}\n\n","import React from 'react';\nimport {\n  DSADefaultPage,\n  GenerateLinks,\n  GenerateRoutes,\n} from '../Routings.js';\nimport Card, { CardGrid } from '../Components/Card.js';\nimport LinkedList from './linked-list.js';\nimport Stack from './stack.js'\nimport Queue from './queue.js'\nimport Array from './array.js'\nimport Heap from './heap.js'\n\nconst prefix = \"/data-structures\";\nconst dataStructures = [\n  {\n    \"name\": \"Array\",\n    \"route\": \"array\",\n    \"page\": Array,\n  },\n  {\n    \"name\": \"Queue\",\n    \"route\": \"queue\",\n    \"page\": Queue,\n  },\n  {\n    \"name\": \"Stack\",\n    \"route\": \"stack\",\n    \"page\": Stack,\n  },\n  {\n    \"name\": \"Linked List\",\n    \"route\": \"linked-list\",\n    \"page\": LinkedList,\n  },\n  {\n    \"name\": \"Doubly Linked List\",\n    \"route\": \"doubly-linked-list\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Hash Table\",\n    \"route\": \"hash-table\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Heap\",\n    \"route\": \"heap\",\n    \"page\": Heap,\n  },\n  {\n    \"name\": \"Tree\",\n    \"route\": \"tree\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"3-4-5 Tree & red-black tree\",\n    \"route\": \"3-4-5-tree\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Graph\",\n    \"route\": \"graph\",\n    \"page\": DSADefaultPage,\n  },\n];\n\nexport function DSLinks() {\n  return (\n    <CardGrid>\n      <Card>\n        <h4>Data Structures</h4>\n        <GenerateLinks prefix={prefix} pages={dataStructures}/>\n      </Card>\n    </CardGrid>\n  );\n}\n\nexport const DSRoutes = () => <GenerateRoutes prefix={prefix} rootPage={DSLinks} pages={dataStructures} />;\n","import React from 'react';\nimport { DSLinks } from '../Data-Structures';\n\nexport default function HomePage() {\n  return (\n    <>\n      <h1>DSA Visualization</h1>\n      <p>Visualizations of data structures and algorithms</p>\n      <DSLinks />\n      <h3 style={{margin: \"5rem auto\", textAlign: \"center\"}}>We're still building this site so some links haven't been implemented yet!</h3>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function AboutPage() {\n  return (\n    <>\n      <h1>About</h1>\n      <p>A repository of reactive visualisations of common Abstract Data Structures and standard Algorithms created by <a href=\"https://danjones.dev\">Daniel Jones</a> and <a href=\"https://people.rit.edu/dl1683/\">Devansh</a></p>\n    </>\n  );\n}\n\n","import React from 'react';\nimport {\n  DSADefaultPage,\n  GenerateLinks,\n  GenerateRoutes,\n} from '../../Routings.js';\nimport Card from '../../Components/Card.js';\n\nconst prefix = '/algorithms/search';\nconst pages = [\n  {\n    \"name\": \"Linear\",\n    \"route\": \"linear\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Binary\",\n    \"route\": \"binary\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Breadth First\",\n    \"route\": \"breadth-first\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Depth First\",\n    \"route\": \"depth-first\",\n    \"page\": DSADefaultPage,\n  },\n];\n\nexport const SearchLinks  = () => {\n  return (\n    <Card>\n      <h4>Search</h4>\n      <GenerateLinks  prefix={prefix} pages={pages}/>\n    </Card>\n  );\n}\nexport const SearchRoutes = () => <GenerateRoutes prefix={prefix} rootPage={SearchLinks} pages={pages}/>;\n","import React from 'react';\nimport {\n  DSADefaultPage,\n  GenerateLinks,\n  GenerateRoutes,\n} from '../../Routings.js';\nimport Card from '../../Components/Card.js';\n\nconst prefix = '/algorithms/sorting';\nconst pages = [\n  {\n    \"name\": \"Bubble\",\n    \"route\": \"bubble\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Insertion\",\n    \"route\": \"insertion\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Merge\",\n    \"route\": \"merge\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Quick\",\n    \"route\": \"quick\",\n    \"page\": DSADefaultPage,\n  },\n  \n  {\n    \"name\": \"Radix\",\n    \"route\": \"radix\",\n    \"page\": DSADefaultPage,\n  },\n];\n\nexport const SortingLinks  = () => {\n  return (\n    <Card>\n      <h4>Sorting</h4>\n      <GenerateLinks prefix={prefix} pages={pages}/>\n    </Card>\n  );\n}\nexport const SortingRoutes = () => <GenerateRoutes prefix={prefix} rootPage={SortingLinks} pages={pages}/>;\n","import React from 'react';\nimport {\n  DSADefaultPage,\n  GenerateLinks,\n  GenerateRoutes,\n} from '../../Routings.js';\nimport Card from '../../Components/Card.js';\n\nconst prefix = '/algorithms/shortest-path';\nconst pages = [\n  {\n    \"name\": \"Dijkstra's\",\n    \"route\": \"dijkstra\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"A*\",\n    \"route\": \"a-star\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Bellman Ford\",\n    \"route\": \"bellman-ford\",\n    \"page\": DSADefaultPage,\n  },\n];\n\nexport const ShortestPathLinks  = () => {\n  return (\n    <Card>\n      <h4>Shortest Path</h4>\n      <GenerateLinks  prefix={prefix} pages={pages}/>\n    </Card>\n  );\n}\nexport const ShortestPathRoutes = () => <GenerateRoutes prefix={prefix} rootPage={ShortestPathLinks} pages={pages}/>;\n","import React from 'react';\nimport {\n  DSADefaultPage,\n  GenerateLinks,\n  GenerateRoutes,\n} from '../Routings.js';\nimport Card, { CardGrid } from '../Components/Card.js';\nimport { SearchLinks, SearchRoutes, } from './Search';\nimport { SortingLinks, SortingRoutes, } from './Sorting';\nimport { ShortestPathLinks, ShortestPathRoutes, } from './Shortest-Path';\n\nconst prefix = \"/algorithms\";\nconst pages = [\n  {\n    \"name\": \"Matchings\",\n    \"route\": \"matchings\",\n    \"page\": DSADefaultPage,\n  },\n  {\n    \"name\": \"Linear Algebra\",\n    \"route\": \"linear-algebra\",\n    \"page\": DSADefaultPage,\n  },\n];\n\nexport function AlgoLinks() {\n  return (\n    <>\n      <h2>Algorithms</h2>\n      <CardGrid>\n        <SearchLinks />\n        <SortingLinks />\n        <ShortestPathLinks />\n        <Card>\n          <h4>Other Algorithms</h4>\n          <GenerateLinks prefix={prefix} pages={pages}/>\n        </Card>\n      </CardGrid>\n    </>\n  );\n}\n\nexport const AlgoRoutes = () => {\n  return (\n    <GenerateRoutes prefix={prefix} rootPage={AlgoLinks} pages={pages}>\n      <SearchRoutes/>\n      <SortingRoutes/>\n      <ShortestPathRoutes/>\n    </GenerateRoutes>\n  );\n}\n","import React from 'react';\nimport { Link, useLocation, matchPath } from 'react-router-dom';\nimport './NavBar.css';\n\nexport default function(props) {\n  const path = useLocation().pathname;\n  const links = [\n    {\n      path: \"/\",\n      text: \"Home\",\n    },\n    {\n      path: \"/data-structures\",\n      text: \"Data Structures\",\n    },\n    {\n      path: \"/algorithms\",\n      text: \"Algorithms\",\n    },\n    {\n      path: \"/about\",\n      text: \"About\",\n    },\n  ];\n\n  return (\n    <header className=\"NavBar\">\n      <nav>\n        {links.map(link =>\n          <Link\n            key={link.path}\n            to={link.path}\n            className={\n            matchPath(path, {\n              path: `${link.path}/*`,\n              strict: true,\n              exact: true,\n            })\n            ||\n            matchPath(path, {\n              path: link.path,\n              strict: true,\n              exact: true,\n            })\n              ? \"active\"\n              : \"\"\n            }\n          >\n            {link.text}\n          </Link>\n        )}\n      </nav>\n    </header>\n  )\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n} from 'react-router-dom';\nimport useAckee from 'use-ackee';\nimport HomePage from './Pages/Home.js';\nimport AboutPage from './Pages/About.js';\nimport { DSRoutes, DSLinks } from './Data-Structures';\nimport { AlgoRoutes, } from './Algorithms';\nimport NavBar from './Components/NavBar.js';\nimport './App.css';\n\nexport default function App() {\n  const location = useLocation();\n  useAckee(location.pathname, {\n    server: 'https://ackee.icedcoffee.dev',\n    domainId: '33d52b14-d0db-4bed-9395-370e46dc8000',\n  }, {\n    ignoreLocalhost: true,\n  });\n\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path=\"/data-structures\">\n          <DSRoutes />\n        </Route>\n        <Route path=\"/algorithms\">\n          <AlgoRoutes />\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/about\">\n          <AboutPage />\n        </Route>\n        <Route exact path=\"/404\">\n          <h1>Error 404</h1>\n        </Route>\n        <Route exact path=\"*\">\n          <Redirect to=\"/404\"/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}